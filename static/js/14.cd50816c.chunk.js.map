{"version":3,"file":"static/js/14.cd50816c.chunk.js","mappings":"oPACA,GAAgB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,uB,SCuCnF,EAjCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,kHAEMC,EAAAA,EAAAA,IAAwBJ,GAF9B,gBAETK,EAFS,EAETA,KACRN,EAAWM,EAAKC,SAHC,gDAIRC,EAJQ,KAIRA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SALT,yDAAH,qDAQlBP,GACD,GAAE,CAACH,IAEJ,IAAMW,EAAWb,EAAQc,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,gBAAIC,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,MAAf,SAA2BH,KAC3B,cAAGE,UAAWC,EAAAA,KAAd,SAAyBF,MAFGd,EADH,IAM7B,OACE,8BACGiB,QAAQnB,EAAQoB,SACf,eAAIH,UAAWC,EAAAA,KAAf,SAA0BL,KAE1B,0DAIP,C,uNCpCKQ,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAS,sCAEf,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBF,EAAAA,EAAAA,GAAM,oBAAqB,CAChDG,OAAQ,CACNC,QAASL,EACTM,KAAM,KAJL,cACClB,EADD,yBAQEA,GARF,kEAWA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1B,GAAjC,wFACkBoB,EAAAA,EAAAA,GAAM,UAAD,OAAWpB,GAAM,CAC3CuB,OAAQ,CACNC,QAASL,KAHR,cACCZ,EADD,yBAOEA,GAPF,kEAUA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAqC3B,GAArC,wFACkBoB,EAAAA,EAAAA,GAAM,UAAD,OAAWpB,EAAX,YAAyB,CACnDuB,OAAQ,CACNC,QAASL,KAHR,cACCZ,EADD,yBAOEA,GAPF,kEAUA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAAuCJ,GAAvC,wFACkBoB,EAAAA,EAAAA,GAAM,UAAD,OAAWpB,EAAX,YAAyB,CACnDuB,OAAQ,CACNC,QAASL,KAHR,cACCZ,EADD,yBAOEA,GAPF,kEAUP,IAAMqB,EAAWR,EAAAA,EAAAA,OAAa,CAC5BS,QAAS,gCACTN,OAAQ,CACNC,QAASL,KAIAW,EAAgB,mCAAG,WAAOC,GAAP,8FAAcN,EAAd,+BAAqB,EAArB,SACPG,EAASI,IAAI,eAAgB,CAClDT,OAAQ,CACNQ,MAAAA,EACAN,KAAAA,KAJ0B,uBACtBpB,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/modules/Reviews/Reviews.module.css?b0bc","modules/Reviews/Reviews.jsx","shared/services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__2Btbj\",\"title\":\"Reviews_title__YgVc-\",\"text\":\"Reviews_text__oRft7\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetailsReview } from 'shared/services/moviesApi';\n\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { data } = await fetchMovieDetailsReview(id);\n        setReviews(data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li className={css.item} key={id}>\n      <h4 className={css.title}>{author}</h4>\n      <p className={css.text}>{content}</p>\n    </li>\n  ));\n  return (\n    <>\n      {Boolean(reviews.length) ? (\n        <ul className={css.list}>{elements}</ul>\n      ) : (\n        <p>No any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst KEY = 'c78419a450ee7857724cd10a5beb7b65';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const imgUrl = 'https://image.tmdb.org/t/p/original';\n\nexport async function fetchTrendMovies() {\n  const response = await axios('/trending/all/day', {\n    params: {\n      api_key: KEY,\n      page: 1,\n    },\n  });\n\n  return response;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response;\n}\n\nexport async function fetchMovieDetailsCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response;\n}\n\nexport async function fetchMovieDetailsReview(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response;\n}\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n  },\n});\n\nexport const fetchSearchMovie = async (query, page = 1) => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","fetchMovieDetailsReview","data","results","response","console","log","message","elements","map","author","content","className","css","Boolean","length","KEY","axios","imgUrl","fetchTrendMovies","params","api_key","page","fetchMovieDetails","fetchMovieDetailsCast","instance","baseURL","fetchSearchMovie","query","get"],"sourceRoot":""}